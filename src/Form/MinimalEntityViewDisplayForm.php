<?php

namespace Drupal\config_quickedit\Form;

use Drupal\Core\Field\FieldDefinitionInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Render\Element;
use Drupal\field_ui\Form\EntityViewDisplayEditForm;

/**
 * @file
 * Contains \\${NAMESPACE}\MinimalEntityViewDisplayForm.
 */

/**
 * Class MinimalEntityViewDisplayForm
 *
 * @todo Update this form to show simple list of fields that can be re-ordered.
 *
 * @package Drupal\config_quickedit\Form
 */
class MinimalEntityViewDisplayForm extends EntityViewDisplayEditForm {
  protected function buildFieldRow(FieldDefinitionInterface $field_definition, array $form, FormStateInterface $form_state) {
    $field_row =  parent::buildFieldRow($field_definition,$form,$form_state);
    unset($field_row['label']);
    unset($field_row['plugin']);
    unset($field_row['settings_summary']);
    unset($field_row['settings_edit']);

    return $field_row;
  }


  public function buildForm(array $form, FormStateInterface $form_state) {
    $form = parent::buildForm($form, $form_state); // TODO: Change the autogenerated stub
    $form['#attached']['library'][] = 'core/drupal.tabledrag';
    unset($form['modes']);
    unset($form['fields']['#header']);
    foreach (Element::children($form['fields']) as $key) {

      //unset($form['fields'][$key]['label']);
      //unset($form['fields'][$key]['plugin']);
      //unset($form['fields'][$key]['settings_summary']);
      //unset($form['fields'][$key]['settings_edit']);
    }
    return $form;
  }

}
